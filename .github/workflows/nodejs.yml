name: Build Electron + Streamlit (Windows)

on:
  push:
    branches: ["dev" ]
    tags:
      - 'v*'
    
jobs:
  build:
    permissions: write-all
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    # Checkout del codice
    - uses: actions/checkout@v4

    # Setup Node.js
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Setup Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    # Install Python deps in virtualenv
    - name: Install Python dependencies
      run: |
        python -m venv python_qlik
        python_qlik\Scripts\activate
        pip install --upgrade pip
        pip install -r requirements.txt

    # Install Node deps
    - run: npm ci

    # Workaround per evitare symlink su Windows
    - name: Disable symlinks
      run: setx npm_config_symlink false

    # Step custom del progetto


    # Calcolo versione dinamica
    - name: Set version
      run: |
        if ("${{ github.ref_name }}" -eq "dev") {
          $VERSION = "0.1.0-dev.${{ github.run_number }}"
        } elseif ("${{ github.ref_name }}" -eq "main") {
          $VERSION = "1.0.0"
        } elseif (startsWith("${{ github.ref_name }}", "v")) {
          $TAG = "${{ github.ref_name }}"
          $VERSION = $TAG -replace "^v", ""
        } else {
          $VERSION = "0.1.0-${{ github.run_number }}"
        }

        echo "VERSION=$VERSION" >> $env:GITHUB_ENV

        # Aggiorna package.json
        (Get-Content package.json) `
          -replace '"version":\s*".*?"', '"version": "' + $VERSION + '"' `
          | Set-Content package.json
    # Build app
    - run: npm run build:win
      env:
        PATH: python_qlik\Scripts;%PATH%

    # Creazione release sempre
    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.VERSION }}
        name: Release ${{ env.VERSION }}
        files: dist/StreamlitElectronApp-${{ env.VERSION}}-win.zip
